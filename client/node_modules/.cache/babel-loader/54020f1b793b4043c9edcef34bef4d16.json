{"ast":null,"code":"var _jsxFileName = \"/Users/nishant/Downloads/dimCure/client/src/components/Home/Home.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Grow, Grid, Paper, AppBar, TextField, Button } from \"@material-ui/core\"; // useLocation -- to know on which page are we currently\n// useHistory -- to re navigate to certain pages and search terms\n\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\"; // importing hook from react-redux\n\nimport { useDispatch } from \"react-redux\"; // allows us to dispatch an action\n\nimport { getPostsBySearch } from \"../../actions/posts\";\nimport Pagination from \"../Pagination\";\nimport Posts from \"../Posts/Posts.js\";\nimport Form from \"../Form/Form.js\";\nimport useStyles from \"./styles\"; // url search params\n// - to know on which page we are currently on and what search term are we looking for\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  return new URLSearchParams(useLocation().search);\n}\n\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\nconst Home = () => {\n  _s2();\n\n  const classes = useStyles(); // query is where we'll be getting our page info from\n\n  const query = useQuery(); // this is going to read our url and see if we have a page parameter in there\n  // if so its going to populate with this variable\n  // else (ie if we dont have the page) we must be on the first one\n\n  const page = query.get(\"page\") || 1;\n  const searchQuery = query.get(\"searchQuery\");\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n  const history = useHistory(); // state field for the search Ideas field\n\n  const [search, setSearch] = useState(\"\");\n  const [tags, setTags] = useState([]); // -- no longer fetch the post from home\n  // --- but pass the page straight to our pagination as a prop\n  // useEffect(() => {\n  //   dispatch(getPosts());\n  // }, [currentId, dispatch]);\n\n  const searchPost = () => {\n    if (search.trim() || tags) {\n      // dispatch -> fetch search post\n      dispatch(getPostsBySearch({\n        search,\n        tags: tags.join(\",\")\n      }));\n      history.push(`/posts/search?searchQuery=${search || \"none\"}&tags=${tags.join(\",\")}`);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  const handleKeyPress = e => {\n    if (e.keyCode === 13) {\n      // search post\n      searchPost();\n    }\n  };\n\n  const handleAddChip = tag => setTags([...tags, tag]);\n\n  const handleDeleteChip = tagToDelete => setTags(tags.filter(tag => tag !== tagToDelete));\n\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxwidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Grid // className={classes.mainContainer}\n      , {\n        container: true,\n        justify: \"space-between\",\n        alignItems: \"stretch\",\n        spacing: 3,\n        className: classes.gridContainer,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 9,\n          children: /*#__PURE__*/_jsxDEV(Posts, {\n            setCurrentId: setCurrentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            className: classes.appBarSearch,\n            position: \"static\",\n            color: \"inherit\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              onKeyDown: handleKeyPress,\n              name: \"search\",\n              variant: \"outlined\",\n              label: \"Search Ideas\",\n              fullWidth: true,\n              value: search,\n              onChange: e => setSearch(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChipInput, {\n              style: {\n                margin: \"10px 0\"\n              },\n              value: tags,\n              onAdd: chip => handleAddChip(chip),\n              onDelete: chip => handleDeleteChip(chip),\n              label: \"Search Tags\",\n              varient: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: searchPost,\n              className: classes.searchButton,\n              varient: \"contained\",\n              color: \"primary\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            currentId: currentId,\n            setCurrentId: setCurrentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), !searchQuery && !tags.length && /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.pagination,\n            elevation: \"6\",\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              page: page\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Home, \"P/e4L0PWWu5GlucC/K5FgsbQ9no=\", false, function () {\n  return [useStyles, useQuery, useDispatch, useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/nishant/Downloads/dimCure/client/src/components/Home/Home.js"],"names":["React","useState","Container","Grow","Grid","Paper","AppBar","TextField","Button","useHistory","useLocation","ChipInput","useDispatch","getPostsBySearch","Pagination","Posts","Form","useStyles","useQuery","URLSearchParams","search","Home","classes","query","page","get","searchQuery","currentId","setCurrentId","dispatch","history","setSearch","tags","setTags","searchPost","trim","join","push","handleKeyPress","e","keyCode","handleAddChip","tag","handleDeleteChip","tagToDelete","filter","gridContainer","appBarSearch","target","value","margin","chip","searchButton","length","pagination"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  Container,\n  Grow,\n  Grid,\n  Paper,\n  AppBar,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\n\n// useLocation -- to know on which page are we currently\n// useHistory -- to re navigate to certain pages and search terms\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport ChipInput from \"material-ui-chip-input\";\n\n// importing hook from react-redux\nimport { useDispatch } from \"react-redux\";\n// allows us to dispatch an action\n\nimport { getPostsBySearch } from \"../../actions/posts\";\n\nimport Pagination from \"../Pagination\";\n\nimport Posts from \"../Posts/Posts.js\";\nimport Form from \"../Form/Form.js\";\n\nimport useStyles from \"./styles\";\n\n// url search params\n// - to know on which page we are currently on and what search term are we looking for\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst Home = () => {\n  const classes = useStyles();\n\n  // query is where we'll be getting our page info from\n  const query = useQuery();\n\n  // this is going to read our url and see if we have a page parameter in there\n  // if so its going to populate with this variable\n  // else (ie if we dont have the page) we must be on the first one\n  const page = query.get(\"page\") || 1;\n\n  const searchQuery = query.get(\"searchQuery\");\n\n  const [currentId, setCurrentId] = useState(0);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // state field for the search Ideas field\n  const [search, setSearch] = useState(\"\");\n\n  const [tags, setTags] = useState([]);\n\n  // -- no longer fetch the post from home\n  // --- but pass the page straight to our pagination as a prop\n  // useEffect(() => {\n  //   dispatch(getPosts());\n  // }, [currentId, dispatch]);\n\n  const searchPost = () => {\n    if (search.trim() || tags) {\n      // dispatch -> fetch search post\n      dispatch(getPostsBySearch({ search, tags: tags.join(\",\") }));\n\n      history.push(\n        `/posts/search?searchQuery=${search || \"none\"}&tags=${tags.join(\",\")}`\n      );\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      // search post\n      searchPost();\n    }\n  };\n\n  const handleAddChip = (tag) => setTags([...tags, tag]);\n\n  const handleDeleteChip = (tagToDelete) =>\n    setTags(tags.filter((tag) => tag !== tagToDelete));\n\n  return (\n    <Grow in>\n      <Container maxwidth=\"xl\">\n        <Grid\n          // className={classes.mainContainer}\n          container\n          justify=\"space-between\"\n          alignItems=\"stretch\"\n          spacing={3}\n          className={classes.gridContainer}\n        >\n          <Grid item xs={12} sm={6} md={9}>\n            <Posts setCurrentId={setCurrentId} />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <AppBar\n              className={classes.appBarSearch}\n              position=\"static\"\n              color=\"inherit\"\n            >\n              <TextField\n                onKeyDown={handleKeyPress}\n                name=\"search\"\n                variant=\"outlined\"\n                label=\"Search Ideas\"\n                fullWidth\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <ChipInput\n                style={{ margin: \"10px 0\" }}\n                value={tags}\n                onAdd={(chip) => handleAddChip(chip)}\n                onDelete={(chip) => handleDeleteChip(chip)}\n                label=\"Search Tags\"\n                varient=\"outlined\"\n              />\n              <Button\n                onClick={searchPost}\n                className={classes.searchButton}\n                varient=\"contained\"\n                color=\"primary\"\n              >\n                Search\n              </Button>\n            </AppBar>\n            <Form currentId={currentId} setCurrentId={setCurrentId} />\n            {!searchQuery && !tags.length && (\n              <Paper className={classes.pagination} elevation=\"6\">\n                <Pagination page={page} />\n              </Paper>\n            )}\n          </Grid>\n        </Grid>\n      </Container>\n    </Grow>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}