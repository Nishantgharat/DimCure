{"ast":null,"code":"var _jsxFileName = \"/Users/priyamshah/Desktop/dimCure/client/src/components/PostDetails/CommentSection.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Typography, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport useStyles from \"./styles.js\";\nimport { commentPost } from \"../../actions/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentSection = ({\n  post\n}) => {\n  _s();\n\n  var _user$result2;\n\n  const classes = useStyles();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const commentsRef = useRef();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n\n  const handleComment = async () => {\n    var _user$result;\n\n    const newComments = await dispatch(commentPost(`${user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name} says: ${comment}`, post._id)); // when we click button -->\n    // we want to dispatch a new action to our redux {commentPost action}\n\n    setComment(\"\");\n    setComments(newComments);\n    commentsRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.commentsOuterContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.commentsInnerContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Comments (login to comment)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), comments === null || comments === void 0 ? void 0 : comments.map((c, i) => /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", c.split(\": \")[0], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), c.split(\":\")[1]]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: commentsRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"70%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Write a Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          rows: 2,\n          variant: \"outlined\",\n          label: \"Share Your Views...\",\n          multiline: true,\n          value: comment,\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: \"10px\"\n          },\n          fullWidth: true,\n          disabled: !comment.length,\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: handleComment,\n          children: \"Suggest / Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentSection, \"iqpKjOwgGWiuIuaRO6Nnm4RTU5E=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = CommentSection;\nexport default CommentSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"sources":["/Users/priyamshah/Desktop/dimCure/client/src/components/PostDetails/CommentSection.jsx"],"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","useStyles","commentPost","CommentSection","post","classes","comments","setComments","comment","setComment","dispatch","commentsRef","user","JSON","parse","localStorage","getItem","handleComment","newComments","result","name","_id","current","scrollIntoView","behavior","commentsOuterContainer","commentsInnerContainer","map","c","i","split","width","e","target","value","marginTop","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAAA;;AACnC,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AAEA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACS,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEE,QAAP,CAAxC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMe,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,WAAW,GAAGf,MAAM,EAA1B;AAEA,QAAMgB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb;;AAEA,QAAMC,aAAa,GAAG,YAAY;AAAA;;AAChC,UAAMC,WAAW,GAAG,MAAMR,QAAQ,CAChCR,WAAW,CAAE,GAAEU,IAAH,aAAGA,IAAH,uCAAGA,IAAI,CAAEO,MAAT,iDAAG,aAAcC,IAAK,UAASZ,OAAQ,EAAxC,EAA2CJ,IAAI,CAACiB,GAAhD,CADqB,CAAlC,CADgC,CAIhC;AACA;;AAEAZ,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,IAAAA,WAAW,CAACW,WAAD,CAAX;AAEAP,IAAAA,WAAW,CAACW,OAAZ,CAAoBC,cAApB,CAAmC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAnC;AACD,GAXD;;AAYA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEnB,OAAO,CAACoB,sBAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEpB,OAAO,CAACqB,sBAAxB;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGpB,QAJH,aAIGA,QAJH,uBAIGA,QAAQ,CAAEqB,GAAV,CAAc,CAACC,CAAD,EAAIC,CAAJ,kBACb,QAAC,UAAD;AAAoB,UAAA,OAAO,EAAC,WAA5B;AAAwC,UAAA,YAAY,MAApD;AAAA,kCACE;AAAA,4BAAUD,CAAC,CAACE,KAAF,CAAQ,IAAR,EAAc,CAAd,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGF,CAAC,CAACE,KAAF,CAAQ,GAAR,EAAa,CAAb,CAFH;AAAA,WAAiBD,CAAjB;AAAA;AAAA;AAAA;AAAA,gBADD,CAJH,eAUE;AAAK,UAAA,GAAG,EAAElB;AAAV;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAaG,CAAAC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,6BAAAA,IAAI,CAAEO,MAAN,gEAAcC,IAAd,kBACC;AAAK,QAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,IAAI,EAAE,CAFR;AAGE,UAAA,OAAO,EAAC,UAHV;AAIE,UAAA,KAAK,EAAC,qBAJR;AAKE,UAAA,SAAS,MALX;AAME,UAAA,KAAK,EAAEvB,OANT;AAOE,UAAA,QAAQ,EAAGwB,CAAD,IAAOvB,UAAU,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV;AAP7B;AAAA;AAAA;AAAA;AAAA,gBAJF,eAaE;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE,QAAC,MAAD;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WADT;AAEE,UAAA,SAAS,MAFX;AAGE,UAAA,QAAQ,EAAE,CAAC3B,OAAO,CAAC4B,MAHrB;AAIE,UAAA,KAAK,EAAC,SAJR;AAKE,UAAA,OAAO,EAAC,WALV;AAME,UAAA,OAAO,EAAEnB,aANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CArED;;GAAMd,c;UACYF,S,EAKCD,W;;;KANbG,c;AAuEN,eAAeA,cAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Typography, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\n\nimport useStyles from \"./styles.js\";\nimport { commentPost } from \"../../actions/posts\";\n\nconst CommentSection = ({ post }) => {\n  const classes = useStyles();\n\n  const [comments, setComments] = useState(post?.comments);\n  const [comment, setComment] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const commentsRef = useRef();\n\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n\n  const handleComment = async () => {\n    const newComments = await dispatch(\n      commentPost(`${user?.result?.name} says: ${comment}`, post._id)\n    );\n    // when we click button -->\n    // we want to dispatch a new action to our redux {commentPost action}\n\n    setComment(\"\");\n    setComments(newComments);\n\n    commentsRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  return (\n    <div>\n      <div className={classes.commentsOuterContainer}>\n        <div className={classes.commentsInnerContainer}>\n          <Typography gutterBottom variant=\"h6\">\n            Comments (login to comment)\n          </Typography>\n          {comments?.map((c, i) => (\n            <Typography key={i} variant=\"subtitle1\" gutterBottom>\n              <strong> {c.split(\": \")[0]} </strong>\n              {c.split(\":\")[1]}\n            </Typography>\n          ))}\n          <div ref={commentsRef} />\n        </div>\n        {user?.result?.name && (\n          <div style={{ width: \"70%\" }}>\n            <Typography gutterBottom variant=\"h6\">\n              Write a Comment\n            </Typography>\n            <TextField\n              fullWidth\n              rows={2}\n              variant=\"outlined\"\n              label=\"Share Your Views...\"\n              multiline\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n            />\n            <br />\n            <Button\n              style={{ marginTop: \"10px\" }}\n              fullWidth\n              disabled={!comment.length}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleComment}\n            >\n              Suggest / Comment\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CommentSection;\n"]},"metadata":{},"sourceType":"module"}