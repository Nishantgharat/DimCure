{"ast":null,"code":"// axios is a js library used to make HTTP request from node.js\nimport axios from \"axios\"; // creating axious end-point\n\nconst API = axios.create({\n  // baseURL: \"https://priyam-share-ideas.herokuapp.com/\",\n  baseURL: \"http://localhost:5002\"\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem(\"profile\")) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem(\"profile\")).token}`;\n  }\n\n  return req;\n}); // url pointing to our backend route\n// const url = \"http://localhost:5000/posts\";\n// const url = \"https://priyam-share-ideas.herokuapp.com/posts\";\n// this url simply returns all posts that we have in our db\n\nexport const fetchPost = id => API.get(`/posts/${id}`);\nexport const fetchPosts = page => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = searchQuery => API.get(`/posts/search?searchQuery=${searchQuery.search || \"none\"}&tags=${searchQuery.tags}`);\nexport const createPost = newPost => API.post(\"/posts\", newPost);\nexport const likePost = id => API.patch(`/posts/${id}/likePost`);\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, {\n  value\n});\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`/posts/${id}`);\nexport const signIn = formData => API.post(\"/user/signin\", formData);\nexport const signUp = formData => API.post(\"/user/signup\", formData);","map":{"version":3,"sources":["/Users/nishant/Downloads/dimCure/client/src/api/index.js"],"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPost","id","get","fetchPosts","page","fetchPostsBySearch","searchQuery","search","tags","createPost","newPost","post","likePost","patch","comment","value","updatePost","updatedPost","deletePost","delete","signIn","formData","signUp"],"mappings":"AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACvB;AACAC,EAAAA,OAAO,EAAE;AAFc,CAAb,CAAZ;AAKAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;AACpC,MAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AACnCF,IAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAC3BC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CK,KAC7C,EAFD;AAGD;;AAED,SAAOP,GAAP;AACD,CARD,E,CAUA;AACA;AACA;AACA;;AAEA,OAAO,MAAMQ,SAAS,GAAIC,EAAD,IAAQf,GAAG,CAACgB,GAAJ,CAAS,UAASD,EAAG,EAArB,CAA1B;AACP,OAAO,MAAME,UAAU,GAAIC,IAAD,IAAUlB,GAAG,CAACgB,GAAJ,CAAS,eAAcE,IAAK,EAA5B,CAA7B;AAEP,OAAO,MAAMC,kBAAkB,GAAIC,WAAD,IAChCpB,GAAG,CAACgB,GAAJ,CACG,6BAA4BI,WAAW,CAACC,MAAZ,IAAsB,MAAO,SACxDD,WAAW,CAACE,IACb,EAHH,CADK;AAOP,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAaxB,GAAG,CAACyB,IAAJ,CAAS,QAAT,EAAmBD,OAAnB,CAAhC;AACP,OAAO,MAAME,QAAQ,GAAIX,EAAD,IAAQf,GAAG,CAAC2B,KAAJ,CAAW,UAASZ,EAAG,WAAvB,CAAzB;AACP,OAAO,MAAMa,OAAO,GAAG,CAACC,KAAD,EAAQd,EAAR,KACrBf,GAAG,CAACyB,IAAJ,CAAU,UAASV,EAAG,cAAtB,EAAqC;AAAEc,EAAAA;AAAF,CAArC,CADK;AAGP,OAAO,MAAMC,UAAU,GAAG,CAACf,EAAD,EAAKgB,WAAL,KACxB/B,GAAG,CAAC2B,KAAJ,CAAW,UAASZ,EAAG,EAAvB,EAA0BgB,WAA1B,CADK;AAGP,OAAO,MAAMC,UAAU,GAAIjB,EAAD,IAAQf,GAAG,CAACiC,MAAJ,CAAY,UAASlB,EAAG,EAAxB,CAA3B;AAEP,OAAO,MAAMmB,MAAM,GAAIC,QAAD,IAAcnC,GAAG,CAACyB,IAAJ,CAAS,cAAT,EAAyBU,QAAzB,CAA7B;AACP,OAAO,MAAMC,MAAM,GAAID,QAAD,IAAcnC,GAAG,CAACyB,IAAJ,CAAS,cAAT,EAAyBU,QAAzB,CAA7B","sourcesContent":["// axios is a js library used to make HTTP request from node.js\n\nimport axios from \"axios\";\n\n// creating axious end-point\nconst API = axios.create({\n  // baseURL: \"https://priyam-share-ideas.herokuapp.com/\",\n  baseURL: \"http://localhost:5002\",\n});\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem(\"profile\")) {\n    req.headers.Authorization = `Bearer ${\n      JSON.parse(localStorage.getItem(\"profile\")).token\n    }`;\n  }\n\n  return req;\n});\n\n// url pointing to our backend route\n// const url = \"http://localhost:5000/posts\";\n// const url = \"https://priyam-share-ideas.herokuapp.com/posts\";\n// this url simply returns all posts that we have in our db\n\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\n\nexport const fetchPostsBySearch = (searchQuery) =>\n  API.get(\n    `/posts/search?searchQuery=${searchQuery.search || \"none\"}&tags=${\n      searchQuery.tags\n    }`\n  );\n\nexport const createPost = (newPost) => API.post(\"/posts\", newPost);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const comment = (value, id) =>\n  API.post(`/posts/${id}/commentPost`, { value });\n\nexport const updatePost = (id, updatedPost) =>\n  API.patch(`/posts/${id}`, updatedPost);\n\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\n\nexport const signIn = (formData) => API.post(\"/user/signin\", formData);\nexport const signUp = (formData) => API.post(\"/user/signup\", formData);\n"]},"metadata":{},"sourceType":"module"}