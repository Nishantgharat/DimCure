{"ast":null,"code":"var _jsxFileName = \"/Users/priyamshah/Desktop/dimCure/client/src/components/Posts/Post/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from \"@material-ui/core/\"; //icons\n\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport DeleteForeverRoundedIcon from \"@material-ui/icons/DeleteForeverRounded\";\nimport EditTwoToneIcon from \"@material-ui/icons/EditTwoTone\";\nimport { useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { likePost, deletePost } from \"../../../actions/posts\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  post,\n  setCurrentId\n}) => {\n  _s();\n\n  var _user$result, _user$result2, _user$result3, _user$result4, _user$result5;\n\n  const [likes, setLikes] = useState(post === null || post === void 0 ? void 0 : post.likes); // we are taking the same value from our post and setting it to our likes\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const history = useHistory();\n  const userId = (user === null || user === void 0 ? void 0 : user.result.googleId) || (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result._id);\n  const hasLikedPost = post.likes.find(like => like === userId);\n\n  const handleLike = async () => {\n    dispatch(likePost(post._id));\n\n    if (hasLikedPost) {\n      setLikes(post.likes.filter(id => id !== userId));\n    } else {\n      setLikes([...post.likes, userId]);\n    }\n  };\n\n  const Likes = () => {\n    if (likes.length > 0) {\n      return likes.find(like => like === userId) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \"\\xA0\", likes.length > 2 ? `You and ${likes.length - 1} others` : `${likes.length} like${likes.length > 1 ? \"s\" : \"\"}`]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpAltOutlined, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), \"\\xA0\", likes.length, \" \", likes.length === 1 ? \"Like\" : \"Likes\"]\n      }, void 0, true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ThumbUpAltOutlined, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), \"\\xA0Like\"]\n    }, void 0, true);\n  };\n\n  const openPost = e => {\n    // dispatch(getPost(post._id, history));\n    history.push(`/posts/${post._id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    raised: true,\n    elevation: 6,\n    children: [/*#__PURE__*/_jsxDEV(ButtonBase, {\n      component: \"span\",\n      name: \"test\",\n      className: classes.cardAction,\n      onClick: openPost,\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        image: post.selectedFile || \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\",\n        title: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.overlay,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: post.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: moment(post.createdAt).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), ((user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.googleId) === (post === null || post === void 0 ? void 0 : post.creator) || (user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3._id) === (post === null || post === void 0 ? void 0 : post.creator)) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.overlay2,\n        name: \"edit\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => {\n            e.stopPropagation();\n            setCurrentId(post._id);\n          },\n          style: {\n            color: \"white\"\n          },\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(EditTwoToneIcon, {\n            fontSize: \"default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"h2\",\n          children: post.tags.map(tag => `#${tag} `)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: [post.message.split(\" \").splice(0, 20).join(\" \"), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      className: classes.cardActions,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        disabled: !(user === null || user === void 0 ? void 0 : user.result),\n        onClick: handleLike,\n        children: /*#__PURE__*/_jsxDEV(Likes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), ((user === null || user === void 0 ? void 0 : (_user$result4 = user.result) === null || _user$result4 === void 0 ? void 0 : _user$result4.googleId) === (post === null || post === void 0 ? void 0 : post.creator) || (user === null || user === void 0 ? void 0 : (_user$result5 = user.result) === null || _user$result5 === void 0 ? void 0 : _user$result5._id) === (post === null || post === void 0 ? void 0 : post.creator)) && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"secondary\",\n        onClick: () => dispatch(deletePost(post._id)),\n        children: [/*#__PURE__*/_jsxDEV(DeleteForeverRoundedIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), \" \\xA0 Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"/SQhqzlvpqnvYCzWrUn9IeF47sQ=\", false, function () {\n  return [useDispatch, useStyles, useHistory];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/priyamshah/Desktop/dimCure/client/src/components/Posts/Post/Post.js"],"names":["React","useState","Card","CardActions","CardContent","CardMedia","Button","Typography","ButtonBase","ThumbUpAltIcon","ThumbUpAltOutlined","DeleteForeverRoundedIcon","EditTwoToneIcon","useDispatch","moment","useHistory","likePost","deletePost","useStyles","Post","post","setCurrentId","likes","setLikes","dispatch","classes","user","JSON","parse","localStorage","getItem","history","userId","result","googleId","_id","hasLikedPost","find","like","handleLike","filter","id","Likes","length","openPost","e","push","card","cardAction","media","selectedFile","title","overlay","name","createdAt","fromNow","creator","overlay2","stopPropagation","color","details","tags","map","tag","message","split","splice","join","cardActions"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  ButtonBase,\n} from \"@material-ui/core/\";\n\n//icons\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport DeleteForeverRoundedIcon from \"@material-ui/icons/DeleteForeverRounded\";\nimport EditTwoToneIcon from \"@material-ui/icons/EditTwoTone\";\n\nimport { useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { likePost, deletePost } from \"../../../actions/posts\";\nimport useStyles from \"./styles\";\n\nconst Post = ({ post, setCurrentId }) => {\n  const [likes, setLikes] = useState(post?.likes);\n  // we are taking the same value from our post and setting it to our likes\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const history = useHistory();\n\n  const userId = user?.result.googleId || user?.result?._id;\n  const hasLikedPost = post.likes.find((like) => like === userId);\n\n  const handleLike = async () => {\n    dispatch(likePost(post._id));\n\n    if (hasLikedPost) {\n      setLikes(post.likes.filter((id) => id !== userId));\n    } else {\n      setLikes([...post.likes, userId]);\n    }\n  };\n\n  const Likes = () => {\n    if (likes.length > 0) {\n      return likes.find((like) => like === userId) ? (\n        <>\n          <ThumbUpAltIcon fontSize=\"small\" />\n          &nbsp;\n          {likes.length > 2\n            ? `You and ${likes.length - 1} others`\n            : `${likes.length} like${likes.length > 1 ? \"s\" : \"\"}`}\n        </>\n      ) : (\n        <>\n          <ThumbUpAltOutlined fontSize=\"small\" />\n          &nbsp;{likes.length} {likes.length === 1 ? \"Like\" : \"Likes\"}\n        </>\n      );\n    }\n\n    return (\n      <>\n        <ThumbUpAltOutlined fontSize=\"small\" />\n        &nbsp;Like\n      </>\n    );\n  };\n\n  const openPost = (e) => {\n    // dispatch(getPost(post._id, history));\n\n    history.push(`/posts/${post._id}`);\n  };\n\n  return (\n    <Card className={classes.card} raised elevation={6}>\n      <ButtonBase\n        component=\"span\"\n        name=\"test\"\n        className={classes.cardAction}\n        onClick={openPost}\n      >\n        <CardMedia\n          className={classes.media}\n          image={\n            post.selectedFile ||\n            \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n          }\n          title={post.title}\n        />\n        <div className={classes.overlay}>\n          <Typography variant=\"h6\">{post.name}</Typography>\n          <Typography variant=\"body2\">\n            {moment(post.createdAt).fromNow()}\n          </Typography>\n        </div>\n        {(user?.result?.googleId === post?.creator ||\n          user?.result?._id === post?.creator) && (\n          <div className={classes.overlay2} name=\"edit\">\n            <Button\n              onClick={(e) => {\n                e.stopPropagation();\n                setCurrentId(post._id);\n              }}\n              style={{ color: \"white\" }}\n              size=\"small\"\n            >\n              <EditTwoToneIcon fontSize=\"default\" />\n            </Button>\n          </div>\n        )}\n        <div className={classes.details}>\n          {/* inside this typography we are going to loop over the tags and add a # */}\n\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n            {post.tags.map((tag) => `#${tag} `)}\n          </Typography>\n        </div>\n        <Typography\n          className={classes.title}\n          gutterBottom\n          variant=\"h5\"\n          component=\"h2\"\n        >\n          {post.title}\n        </Typography>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {post.message.split(\" \").splice(0, 20).join(\" \")}...\n          </Typography>\n        </CardContent>\n      </ButtonBase>\n      <CardActions className={classes.cardActions}>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          disabled={!user?.result}\n          onClick={handleLike}\n        >\n          <Likes />\n        </Button>\n        {(user?.result?.googleId === post?.creator ||\n          user?.result?._id === post?.creator) && (\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            onClick={() => dispatch(deletePost(post._id))}\n          >\n            <DeleteForeverRoundedIcon fontSize=\"small\" /> &nbsp; Delete\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}